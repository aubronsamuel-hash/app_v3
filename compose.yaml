services:
  api:
    build: ./backend
    ports:
      - "${API_PORT:-8001}:8001"
    env_file: .env
    profiles: [dev, obs]
  front:
    build: ./frontend
    ports:
      - "${FRONT_PORT:-5173}:5173"
    env_file: .env
    profiles: [dev]
  caddy:
    image: caddy:2.8
    ports:
      - "${CADDY_HTTP_PORT:-8080}:8080"
      # - "443:443"   # uncomment for TLS vhost
    volumes:
      - ./deploy/caddy/Caddyfile:/etc/caddy/Caddyfile:ro
    depends_on:
      - api
      - front
    profiles: [dev, obs]
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    profiles: [dev]
  redis:
    image: redis:7
    ports:
      - "6379:6379"
    profiles: [dev]
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - ./deploy/grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
      - loki
    profiles: [obs]
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./deploy/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    profiles: [obs]
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    ports:
      - "8081:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    profiles: [obs]
  loki:
    image: grafana/loki:2.8.2
    ports:
      - "3100:3100"
    profiles: [obs]
  promtail:
    image: grafana/promtail:2.8.2
    volumes:
      - ./deploy/promtail/config.yml:/etc/promtail/config.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command: -config.file=/etc/promtail/config.yml
    profiles: [obs]
